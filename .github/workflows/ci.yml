name: CI - Build and Push Images

on:
  push:
    branches: [ main ]
    paths:
      - 'backend/**'
      - 'frontend/**'
      - '.github/workflows/ci.yml'
      - 'Dockerfile*'
      - '*.dockerfile'
  pull_request:
    branches: [ main ]
    paths:
      - 'backend/**'
      - 'frontend/**'
      - '.github/workflows/ci.yml'
  workflow_dispatch:
    inputs:
      build-backend:
        description: 'Build Backend'
        type: boolean
        default: true
      build-frontend:
        description: 'Build Frontend'
        type: boolean
        default: true

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-backend:
    name: Build Backend API
    runs-on: ubuntu-latest
    if: ${{ github.event_name != 'workflow_dispatch' || inputs.build-backend }}
    outputs:
      version-tag: ${{ steps.meta.outputs.version }}
    permissions:
      contents: read
      packages: write
      id-token: write
    
    steps:
    # ===========================================
    # SETUP: Repository and Build Environment
    # ===========================================
    
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    # ===========================================
    # AUTHENTICATION: Container Registry
    # ===========================================
    
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    
    # ===========================================
    # METADATA: Version Tags and Labels
    # ===========================================
    
    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/backend
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=sha,prefix={{branch}}-,format=short
          type=raw,value=run-${{ github.run_number }}-{{sha}},enable={{is_default_branch}}
    
    # ===========================================
    # BUILD: Docker Image
    # ===========================================
    
    - name: Build and push Backend API
      uses: docker/build-push-action@v5
      with:
        context: ./backend
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        build-args: |
          DB_HOST=postgres.local.pro4.es
          DB_PORT=5432
          DB_NAME=voucherskit
          DB_USER=voucherskit
          DB_PASSWORD=${{ secrets.DB_PASSWORD_PROD }}
          JWT_SECRET_KEY=${{ secrets.JWT_SECRET_KEY_PROD }}
          ENVIRONMENT=production

  build-frontend:
    name: Build React Frontend
    runs-on: ubuntu-latest
    if: ${{ github.event_name != 'workflow_dispatch' || inputs.build-frontend }}
    outputs:
      version-tag: ${{ steps.meta.outputs.version }}
    permissions:
      contents: read
      packages: write
      id-token: write
    
    steps:
    # ===========================================
    # SETUP: Repository and Build Environment
    # ===========================================
    
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    # ===========================================
    # AUTHENTICATION: Container Registry
    # ===========================================
    
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    
    # ===========================================
    # METADATA: Version Tags and Labels
    # ===========================================
    
    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/frontend
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=sha,prefix={{branch}}-,format=short
          type=raw,value=run-${{ github.run_number }}-{{sha}},enable={{is_default_branch}}
    
    # ===========================================
    # BUILD: Docker Image
    # ===========================================
    
    - name: Build and push Frontend
      uses: docker/build-push-action@v5
      with:
        context: ./frontend
        file: ./frontend/Dockerfile.prod
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        build-args: |
          REACT_APP_API_URL=https://api.voucherskit.com
          REACT_APP_ENVIRONMENT=production

  summary:
    name: Build Summary
    runs-on: ubuntu-latest
    needs: [build-backend, build-frontend]
    if: success()
    
    steps:
    - name: Build Summary
      run: |
        echo "### Build Completed Successfully!" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Build Number:** ${{ github.run_number }}" >> $GITHUB_STEP_SUMMARY
        echo "**Git SHA:** ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
        SHORT_SHA=$(echo "${{ github.sha }}" | cut -c1-7)
        echo "**Version Tag:** run-${{ github.run_number }}-${SHORT_SHA}" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Built Images:" >> $GITHUB_STEP_SUMMARY
        echo "- **Backend:** \`${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/backend\`" >> $GITHUB_STEP_SUMMARY
        echo "- **Frontend:** \`${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/frontend\`" >> $GITHUB_STEP_SUMMARY
        echo "- **E2E Tests:** \`${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/e2e-tests\`" >> $GITHUB_STEP_SUMMARY