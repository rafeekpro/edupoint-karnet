apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
  namespace: myapp
  labels:
    app: frontend
    component: ui
spec:
  replicas: 2
  revisionHistoryLimit: 5
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: frontend
      component: ui
  template:
    metadata:
      labels:
        app: frontend
        component: ui
      annotations:
        prometheus.io/scrape: "false"
    spec:
      serviceAccountName: frontend-sa
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
      
      # Image pull secrets
      imagePullSecrets:
        - name: ghcr-secret
      
      containers:
        - name: frontend
          image: frontend:latest
          imagePullPolicy: IfNotPresent
          
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
          
          # Environment variables
          env:
            - name: PORT
              valueFrom:
                configMapKeyRef:
                  name: app-config
                  key: FRONTEND_PORT
            - name: NODE_ENV
              value: "production"
            - name: API_URL
              value: "http://backend"
            
            # Public environment variables (for client-side)
            - name: NEXT_PUBLIC_API_URL
              value: "/api"
            - name: REACT_APP_API_URL
              value: "/api"
            - name: VUE_APP_API_URL
              value: "/api"
            - name: VITE_API_URL
              value: "/api"
          
          # Resource limits
          resources:
            requests:
              memory: "128Mi"
              cpu: "100m"
            limits:
              memory: "256Mi"
              cpu: "200m"
          
          # Probes
          livenessProbe:
            httpGet:
              path: /
              port: http
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 30
            timeoutSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          
          readinessProbe:
            httpGet:
              path: /
              port: http
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 3
          
          startupProbe:
            httpGet:
              path: /
              port: http
              scheme: HTTP
            initialDelaySeconds: 0
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 30
          
          # Volume mounts
          volumeMounts:
            - name: tmp
              mountPath: /tmp
            - name: cache
              mountPath: /app/.next/cache
              # For other frameworks:
              # mountPath: /app/.nuxt/cache
              # mountPath: /app/.cache
          
          # Security context
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1000
            capabilities:
              drop:
                - ALL
      
      # Volumes
      volumes:
        - name: tmp
          emptyDir: {}
        - name: cache
          emptyDir: {}
      
      # Pod disruption budget
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - frontend
                topologyKey: kubernetes.io/hostname
      
      # Termination grace period
      terminationGracePeriodSeconds: 30
---
# ServiceAccount
apiVersion: v1
kind: ServiceAccount
metadata:
  name: frontend-sa
  namespace: myapp
  labels:
    app: frontend